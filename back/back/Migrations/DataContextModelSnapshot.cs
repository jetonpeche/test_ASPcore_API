// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back.dbContext;

namespace back.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("back.table.Commande", b =>
                {
                    b.Property<int>("idCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dateLivraisonCommande")
                        .HasColumnType("datetime");

                    b.Property<int>("idUtilisateur")
                        .HasColumnType("int");

                    b.HasKey("idCommande");

                    b.HasIndex("idUtilisateur");

                    b.ToTable("commande");
                });

            modelBuilder.Entity("back.table.Departement", b =>
                {
                    b.Property<int>("idDep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nomDep")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idDep");

                    b.ToTable("departement");
                });

            modelBuilder.Entity("back.table.Pain", b =>
                {
                    b.Property<int>("idPain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nomPain")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idPain");

                    b.ToTable("pain");
                });

            modelBuilder.Entity("back.table.PainCommande", b =>
                {
                    b.Property<int>("idCommande")
                        .HasColumnType("int");

                    b.Property<int>("idPain")
                        .HasColumnType("int");

                    b.Property<int>("qte")
                        .HasColumnType("int");

                    b.HasKey("idCommande", "idPain");

                    b.HasIndex("idPain");

                    b.ToTable("painCommande");
                });

            modelBuilder.Entity("back.table.Utilisateur", b =>
                {
                    b.Property<int>("idUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adresseUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("mailUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("mdpUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("nomUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("prenomUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idUtilisateur");

                    b.ToTable("utilisateur");
                });

            modelBuilder.Entity("back.table.Commande", b =>
                {
                    b.HasOne("back.table.Utilisateur", "utilisateur")
                        .WithMany()
                        .HasForeignKey("idUtilisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("utilisateur");
                });

            modelBuilder.Entity("back.table.PainCommande", b =>
                {
                    b.HasOne("back.table.Commande", "commande")
                        .WithMany("listePainCommande")
                        .HasForeignKey("idCommande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back.table.Pain", "pain")
                        .WithMany("listePainCommande")
                        .HasForeignKey("idPain")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("commande");

                    b.Navigation("pain");
                });

            modelBuilder.Entity("back.table.Commande", b =>
                {
                    b.Navigation("listePainCommande");
                });

            modelBuilder.Entity("back.table.Pain", b =>
                {
                    b.Navigation("listePainCommande");
                });
#pragma warning restore 612, 618
        }
    }
}
